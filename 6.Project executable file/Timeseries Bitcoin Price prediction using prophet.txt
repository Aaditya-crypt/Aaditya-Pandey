# prompt: Timeseries Bitcoin Price prediction using prophet and yahoofinance

#!pip install holidays==0.24
#!pip install prophet==1.1.2
#!pip install yfinance

import yfinance as yf
import holidays
from prophet import Prophet
import pandas as pd
import matplotlib.pyplot as plt

# Download Bitcoin historical data from Yahoo Finance
bitcoin_data = yf.download('BTC-USD', start='2017-01-01', end='2024-11-01')

# Prepare data for Prophet
df_prophet = bitcoin_data[['Close']].reset_index()
df_prophet = df_prophet.rename(columns={'Date': 'ds', 'Close': 'y'})

# Ensure 'ds' is in datetime format
df_prophet['ds'] = df_prophet['ds'].dt.date
df_prophet['y'] = df_prophet['y'].astype(int)
df_prophet.columns = range(df_prophet.shape[1])

# code to convert tabular array into string array
dateArray= [str(item) for item in df_prophet[0]]
yearArray= [str(item) for item in df_prophet[1]]

# 
new_data = {'ds':dateArray , 'y': yearArray}

#data2 = {'ds': ['2020-01-01', '2020-01-02', '2020-01-03'], 'y': [100, 110, 120]}
df_final = pd.DataFrame(new_data)

# Create and fit the Prophet model
model = Prophet(daily_seasonality = True)
model.fit(df_final)

# Create a future dataframe for forecasting
future = model.make_future_dataframe(periods=365)  # Forecast for the next year

# Generate predictions
forecast = model.predict(future)

# Plot the forecast
fig1 = model.plot(forecast)
plt.title('Bitcoin Price Forecast')
plt.xlabel('Date')
plt.ylabel('Price (USD)')
plt.show()

# Plot components of the forecast (trend, seasonality, etc.)
fig2 = model.plot_components(forecast)
plt.show()

# Print some predictions
print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].tail())

